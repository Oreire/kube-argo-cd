# # 1️⃣ Create ArgoCD Namespace
# apiVersion: v1
# kind: Namespace
# metadata:
#   name: argocd

---
# 2️⃣ Install ArgoCD Using Kustomization
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - install.yaml  # ✅ Reference local install.yaml instead of URL
namespace: argocd

---
# 3️⃣ ArgoCD Server Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-server
  namespace: argocd
  labels:
    app: argocd-server
spec:
  replicas: 2  # ✅ Increased replicas for high availability
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app:argocd-server
  template:
    metadata:
      labels:
        app: argocd-server
    spec:
      containers:
        - name: argocd-server
          image: quay.io/argoproj/argocd:v2.8.0  # ✅ Official ArgoCD image
          ports:
            - containerPort: 8080
          resources:
            requests:
              cpu: "250m"
              memory: "512Mi"
            limits:
              cpu: "500m"
              memory: "1Gi"

---
# 4️⃣ Expose ArgoCD UI via NodePort
apiVersion: v1
kind: Service
metadata:
  name: argocd-server-service
  namespace: argocd
spec:
  selector:
    app: argocd-server
  type: NodePort
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
      nodePort: 31177  # ✅ Accessible via http://localhost:31080

