name: Deploy ArgoCD & MyApp on Local Kubernetes (Docker Desktop)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: [self-hosted, Windows, X64]  # Runs on your local machine

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Verify Kubernetes Context
        run: |
          kubectl config current-context
          kubectl get nodes
          echo "Confirmed Kubernetes context is Docker Desktop."

      - name: Apply ArgoCD Service Manifest from Local File
        run: |
          cd deploy
          kubectl apply -f argoservice.yaml
          echo "ArgoCD server manifest applied successfully."

      - name: Apply ArgoCD Application Manifest on Local Cluster
        run: |
          cd deploy
          kubectl apply -f argoapp.yaml
          echo "ArgoCD installed successfully."

      - name: Apply MyApp Manifest on Local Cluster
        run: |
          cd deploy
          kubectl apply -f myapp.yaml
          echo "Application deployed successfully."
    
      - name: Apply MyApp Service Manifest
        run: |
          cd deploy 
          kubectl apply -f appservice.yaml
          echo "MyApp service manifest applied successfully."
      - name: Wait for MyApp Deployment to be Ready
        run: |
          cd deploy
          kubectl rollout status deployment/mywebapp -n default
          echo "MyApp deployment is ready."
          
      - name: Verify MyApp Deployment
        run: |
          cd deploy
          kubectl get pods -n default
          kubectl get svc -n default
          echo "MyApp deployment verified."

      - name: Verify ArgoCD Application
        run: |
          cd deploy
          kubectl get applications -n argocd
          echo "ArgoCD application verified."

      - name: Verify ArgoCD Server
        run: |
          cd deploy
          kubectl get pods -n argocd
          kubectl get svc -n argocd
          echo "ArgoCD server verified."

      - name: Start Port Forwarding for ArgoCD & MyApp
        run: |
          cd deploy
          kubectl port-forward svc/argocd-server 30007:8080 -n argocd &
          kubectl port-forward svc/myapp-service 30006:80 -n default &
          sleep 60
          echo "Local Port Forwarding Setup: ArgoCD on http://localhost:30008 | MyApp on http://localhost:30006"

      - name: Cleanup
        run: |
          cd deploy
          Get-Process | Where-Object { $_.ProcessName -match "kubectl" } | Stop-Process -Force
          echo "Port forwarding processes cleaned up."

